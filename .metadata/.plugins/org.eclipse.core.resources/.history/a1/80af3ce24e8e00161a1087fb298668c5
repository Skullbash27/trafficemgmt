/* This class will be responsible for drawing the grid 
 * Layouting the streets, avenues, entry points
 * and traffic signals
 */

import javax.swing.*;
import java.util.*;
import java.awt.*;

public class TrafficGrid extends Canvas implements Runnable {
	
	int ypos=200;
	int carwidth=6, carlength=9;
	int xpos[]= new int[5];
	int rdleft[]=new int[5];
	int rdright[] = new int[5];
	int rdtop= ypos+ carwidth, rdbottom= ypos- carwidth;
	
	public TrafficGrid() {
		for (int i=0; i<5; i++) {
			//light[i]= new ChangeLight();
			//carpermin[i]= new CalFlow();
			xpos[i]=150*(i+1);				//middle line for vertical road
			//brgright[i]=xpos[i]- carlength;	//right line for vertical road
			//brgleft[i]=xpos[i]+ carlength;	//left line for vertical road
			//brgflag[i]=0;					//intersection not occupied
		}
		for(int k=1; k<4; k++) {
			rdleft[k]= xpos[k-1]- carwidth;
			rdright[k]= xpos[k-1]+ carwidth; 
		}
		rdleft[0]=0;
		rdright[0]=0;
	}
	
	Image offscreen;
	Dimension offscreensize;
	Graphics offgraphics;
	
	public synchronized void paint(Graphics g) {
		Dimension d = getSize();
		if ((offscreen == null) || (d.width != offscreensize.width) || (d.height != offscreensize.height)) {
				//for window resizing
				offscreen = createImage(d.width, d.height);
				offscreensize = d;
				offgraphics = offscreen.getGraphics();
		}
		offgraphics.setColor(Color.black);
		offgraphics.fillRect(0, 0, d.width, d.height);
		paintRoad(offgraphics);
		g.drawImage(offscreen, 0, 0, null);
	}
	
	public void paintRoad(Graphics g){
		Dimension d = getSize();
		g.setColor(Color.gray);
		for(int k=1; k<4; k++){
			g.drawLine(rdleft[k], 0, rdleft[k], rdbottom);
			g.drawLine(rdleft[k], rdtop, rdleft[k], d.height);
			g.drawLine(rdright[k], 0, rdright[k], rdbottom);
			//g.drawLine(rdright[k], rdtop, rdright[k], d.height);
			g.drawLine(rdright[k-1], rdtop, rdleft[k], rdtop);
			g.drawLine(rdright[k-1], rdbottom, rdleft[k], rdbottom);
		}
		g.drawLine(rdright[3], rdbottom, d.width, rdbottom);
		g.drawLine(rdright[3], rdtop, d.width, rdtop);
	}
	
	public void run() {
		while (true) {
			repaint();
			try {
				Thread.sleep(50);
			} catch (InterruptedException e) {
				break;
			}
		}
	}
	
}
