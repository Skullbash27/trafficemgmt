import javax.swing.JPanel;
import javax.swing.JToolBar;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;

public class ToolBar extends JPanel implements ActionListener {
	
	private JButton start;
	private JButton stop;
//	private Canvas printCanvas;
	private DisplayEvents events;
	
	
	private java.util.Timer timer = new java.util.Timer(); 
	
	public ToolBar() {
		
		start = new JButton("Start");
		stop = new JButton("Stop");
		
		start.addActionListener(this);
		stop.addActionListener(this);
		
		setLayout(new FlowLayout());
		
		add(start);
		add(stop);
	}	

/*	
	public void setTextPanel(Canvas printCanvas) {
		this.printCanvas = printCanvas;
	}

*/
	
	public void setDisplayEvents(DisplayEvents events) {
		this.events = events;
	}
	
	
	
	@Override
	public void actionPerformed(ActionEvent event) {
		JButton clicked = (JButton) event.getSource();
		
		if (clicked == start) {
			java.util.TimerTask task = new java.util.TimerTask() {

				@Override
				public void run() {
					if (events != null) {
						events.draw("Simulation has Started\n");
					}
				//	printCanvas.appendText("The Simulation has Started\n");					
				}				
			};
			timer.schedule(task, java.util.Calendar.getInstance().getTime(), 500);
		}		
		else {
			timer.cancel();
	//		printCanvas.appendText("The Simulation has Stopped\n");
			if (events != null) {
				events.draw("Simualtion has Stopped\n");
			}
			Statistics stats = new Statistics();
			stats.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			stats.setVisible(true);
		//	stats.setSize(1800,1500);
		}		
	}
}
